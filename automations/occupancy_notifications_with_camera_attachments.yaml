blueprint:
  name: Occupancy Notification with Camera Snapshot and Clear Notification (Per-Device Conditions)
  description: |
    Notify selected devices when an occupancy sensor (input_boolean, binary_sensor, or switch) turns on, send a camera snapshot, dynamically link to Lovelace page,
    and clear the notification when it turns off. Each device can have its own condition template to control when it should be notified.
  domain: automation
  input:
    occupancy_sensors:
      name: Occupancy Sensors
      description: Select the occupancy sensor(s) that will trigger the notifications (must toggle between 'on' and 'off').
      selector:
        entity:
          filter:
            - domain: input_boolean
            - domain: binary_sensor
            - domain: switch
          multiple: true  # Allow selecting multiple sensors
    notification_devices:
      name: iOS Devices to Notify
      description: Select the iOS device(s) that will receive the notifications
      selector:
        device:
          integration: mobile_app
          manufacturer: Apple
          multiple: true
    notify_conditions:
      name: Notification Conditions for Each Device
      description: Specify a condition template for each notification device to control when it should be notified. If left blank, the device will always receive notifications.
      selector:
        object:
          device: template
          match:
            device: !input notification_devices
            template: "{{ true }}"  # Default is to always notify if no specific condition is provided
mode: single

trigger:
  - platform: state
    entity_id: !input occupancy_sensors
    to: "on"
  - platform: state
    entity_id: !input occupancy_sensors
    to: "off"

variables:
  area: "{{ area_name(trigger.entity_id) }}"
  timestamp: "{{ trigger.to_state.last_changed.strftime('%Y-%m-%d %H:%M:%S') }}"  # Using the last_changed attribute for the timestamp
  camera_entity: >
    {{ area_entities(area) | select('search', 'camera') | first }}
  lovelace_path: "/lovelace/{{ area | lower | replace(' ', '-') }}/cameras"  # Dynamically generate Lovelace path based on area

action:
  - choose:
      # When entity turns 'on'
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'on' }}"
        sequence:
          # Notify each device if their individual condition is met
          - repeat:
              count: "{{ (input.notification_devices | length) }}"
              sequence:
                - variables:
                    current_device: "{{ input.notification_devices[repeat.index - 1] }}"
                    condition_template: "{{ input.notify_conditions[current_device] | default('true') }}"
                - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ condition_template }}"  # Check individual device condition
                      sequence:
                        - device_id: "{{ current_device }}"
                          domain: mobile_app
                          type: notify
                          message: "Occupancy detected in {{ area }} at {{ timestamp }}."
                          data:
                            push:
                              thread-id: "occupancy_{{ area | lower | replace(' ', '_') }}"  # Thread ID to group notifications
                              id: "occupancy_{{ area | lower | replace(' ', '_') }}"  # Unique notification ID
                            image: "{{ state_attr(camera_entity, 'entity_picture') }}"  # Camera snapshot
                            clickAction: "{{ lovelace_path }}"  # Dynamic Lovelace link

      # When entity turns 'off'
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'off' }}"
        sequence:
          # Notify each device if their individual condition is met
          - repeat:
              count: "{{ (input.notification_devices | length) }}"
              sequence:
                - variables:
                    current_device: "{{ input.notification_devices[repeat.index - 1] }}"
                    condition_template: "{{ input.notify_conditions[current_device] | default('true') }}"
                - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ condition_template }}"  # Check individual device condition
                      sequence:
                        - device_id: "{{ current_device }}"
                          domain: mobile_app
                          type: notify
                          message: "The previous occupancy at {{ timestamp }} in {{ area }} has now cleared."
                          data:
                            push:
                              thread-id: "occupancy_{{ area | lower | replace(' ', '_') }}"  # Same thread ID to clear previous notification
                              id: "occupancy_{{ area | lower | replace(' ', '_') }}"  # Same notification ID to clear
                            image: "{{ state_attr(camera_entity, 'entity_picture') }}"  # Camera snapshot
                            clickAction: "{{ lovelace_path }}"  # Dynamic Lovelace link
